#!/bin/bash

usage="
A part of
      ___           ___           ___     
     /\  \         /\  \         /\__\    
    /::\  \        \:\  \       /::|  |   
   /:/\:\  \        \:\  \     /:|:|  |   
  /::\~\:\  \       /::\  \   /:/|:|__|__ 
 /:/\:\ \:\__\     /:/\:\__\ /:/ |::::\__\\
 \/__\:\/:/  /    /:/  \/__/ \/__/~~/:/  /
      \::/  /    /:/  /            /:/  / 
      /:/  /     \/__/            /:/  /  
     /:/  /                      /:/  /   
     \/__/                       \/__/    

scripts by @9oelm https://github.com/9oelM

atm-find-crlf-injections.sh

checks CRLF injection from the list of payloads 
(a single line of payload needs to be in a full url form. i.e. https://example.com/payload).

this script best works by feeding the output of atm-get-crlf-injection-payloads.sh script.

example:
cat urls.txt | ./atm-find-crlf-injections.sh -o output.txt
cat urls.txt | ./atm-find-crlf-injections.sh -o output.txt -i \"My-Custom-Header-To-Check:\"

usage:
-i [optional] injected header to check against. if you are using some payload generated by something else than
              atm-get-crlf-injection-payloads.sh, you should use this option.
              example: \"My-Custom-Header: test\"
-o [optional] path to output file. It will contain the list of working payloads.
              this option is not required because the script stdouts working payloads by default.
-t [optional] number of threads (default 15)
-h help
"

NUM_THREADS=15
CRLF_INJECTION_HEADER="X-Amz-Id-Custom-Test-Sxa6S1zx3F4wtLyg:123"

while getopts i:o:t:h: flag; do
    case "${flag}" in
    i)
        CRLF_INJECTION_HEADER=${OPTARG}
        ;;
    o)
        OUTPUT_FILE_PATH=${OPTARG}
        ;;
    t)
        NUM_THREADS=${OPTARG}
        ;;
    h)
        printf "${usage}"
        exit
        ;;
    *) 
        printf "${usage}" 
        exit 
        ;;
    esac
done
# remove all spaces from the header. i.e. X-Amz-Id-Custom-Test-Sxa6S1zx3F4wtLyg: 123 --> X-Amz-Id-Custom-Test-Sxa6S1zx3F4wtLyg:123
CRLF_INJECTION_HEADER=$(echo "${CRLF_INJECTION_HEADER// /}")

[ -f "${OUTPUT_FILE_PATH}" ] && echo "[!] File ${OUTPUT_FILE_PATH} already exists. Please try again." && exit 

touch "${OUTPUT_FILE_PATH}"

stdin=""
if [ -p /dev/stdin ]; then
    stdin=$(cat /dev/stdin)
else
    echo "[!] No stdin detected. Pipe input into this script."
    echo "${usage}"
    echo "[!] No stdin detected. Pipe input into this script."
    exit
fi

function get_headers_from() {
    url="$1"
    local -n headers="$2"
    # https://stackoverflow.com/questions/10060098/getting-only-response-header-from-http-post-using-curl
    headers=$(curl -s -D - -o /dev/null "${url}")
}
export -f get_headers_from

function check_crlf_injection() {
    result_headers=""
    url="$1"
    CRLF_INJECTION_HEADER="$2"
    OUTPUT_FILE_PATH="$3"
    get_headers_from "${url}" result_headers

    echo "[+] Testing ${url}"
    # the reason for removing whitespaces is that
    # sometimes the server will format your header and it will contain some space or not contain the space
    # so just remove the spaces
    # example:

    # this will get converted:
    # HTTP/1.1 301 Moved Permanently
    #   Content-Type: text/html
    # Content-Length: 178
    # Server: nginx
    #       Location:      https://example.com
    # X-Amz-Id-Custom-Test-Sxa6S1zx3F4wtLyg: 123
    #    X-Frame-Options: SAMEORIGIN
    # Strict-Transport-Security: max-age=7200
    # Expires: Mon, 22 Nov 2021 11:44:59 GMT
    # Cache-Control: max-age=0, no-cache
    # Pragma: no-cache
    # Date: Mon, 22 Nov 2021 11:44:59 GMT
    # Connection: keep-alive

    # to this:
    # HTTP/1.1301MovedPermanently
    # Content-Type:text/html
    # Content-Length:178
    # Server:nginx
    # Location:https://example.com
    # X-Amz-Id-Custom-Test-Sxa6S1zx3F4wtLyg:123
    # X-Frame-Options:SAMEORIGIN
    # Strict-Transport-Security:max-age=7200
    # Expires:Mon,22Nov202111:44:59GMT
    # Cache-Control:max-age=0,no-cache
    # Pragma:no-cache
    # Date:Mon,22Nov202111:44:59GMT
    # Connection:keep-alive

    # still, there is no problem because we just need to check the header exists on its own newline alone
    header_with_all_spaces_removed=$(echo "${result_headers// /}" | grep -E "^${CRLF_INJECTION_HEADER}*")
    if [[ ! -z "$header_with_all_spaces_removed" ]]; then
        echo "[+] Found ${url} vulnerable"
        [ ! -z "${OUTPUT_FILE_PATH}" ] && echo "${url}" >> "${OUTPUT_FILE_PATH}" 
    fi
}
export -f check_crlf_injection

echo "${stdin}" | xargs -P "${NUM_THREADS}" -I % bash -c "check_crlf_injection % ${CRLF_INJECTION_HEADER} ${OUTPUT_FILE_PATH};"
